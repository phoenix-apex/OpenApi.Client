openapi: 3.0.1
info:
  contact:
    email: notifications.mita@gov.mt
    name: MITA
    url: https://mita.gov.mt
  description: "The Notifications REST API allows programmatic access to the Notifications\
    \ Portal message funtionality. To use the REST API, you will need a Notifications\
    \ Portal Account and an API key and secret. You can generate from the Notifications\
    \ Portal using the API Key Manager.The REST API takes full advantage of all HTTP\
    \ headers. Each part of a request and response is meaningful, including the request\
    \ method (GET/POST, etc.), the individual headers (Location, Content-Type, Accept,\
    \ etc.), and the response status code (200, 400, 404, etc.). Use of this API assumes\
    \ a working knowledge of these HTTP components, and general use of RESTful web\
    \ APIs."
  license:
    name: Notifications Portal Documentation
    url: https://mita.gov.mt/portfolio/information-systems/notifications-platform
  title: MITA Notifications Platform REST API
  version: v1
servers:
- url: /
paths:
  /api/v1/key:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKey'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiKey'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: "Use this API to refresh an expired API Key and obtain a new Secret\
        \ Key.\r\n\r\nPlease note that API Secret Keys expire after seven days by\
        \ default. \r\nWhen this key expires, the user needs to refresh the API Secret\
        \ Key\r\nusing this endpoint to generate a new secret key. \r\n\r\nYou can\
        \ obtain a new Secret Key the expired Secret Key."
      tags:
      - API Key
      x-csharp-action: GetApiV1Key
  /api/v1/attachments/{attachmentId}:
    get:
      parameters:
      - description: Attachment unique identifier.
        explode: false
        in: path
        name: attachmentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: byte
                type: string
          description: Success
        "404":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
        default:
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Retrieves a file attachment as specified by the attachmentId parameter.
      tags:
      - Attachments
      x-csharp-action: GetApiV1AttachmentsByAttachmentId
  /api/v1/inbound-messages/{inboundMessageId}:
    get:
      parameters:
      - description: Inbound Message unique identifier.
        explode: false
        in: path
        name: inboundMessageId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/InboundMessage'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: "This method is used to query the status of a message request in the\
        \ Notifications System \r\nInbound Queue waiting to be processed by the backend\
        \ services. To retrieve the inbound \r\nmessage details use the InboundMessageId\
        \ returned in a successful response when a new\r\nmessage is submitted to\
        \ the API."
      tags:
      - Inbound Messages
      x-csharp-action: GetApiV1InboundMessagesByInboundMessageId
  /api/v1/inbound-messages:
    get:
      parameters:
      - description: Unique reference generated by the Notifications Portal to identify
          a group of messages posted in bulk.
        explode: true
        in: query
        name: BatchId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Unique reference used to identify a group of batches in the inbound
          queue.
        explode: true
        in: query
        name: TransactionId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Message Type.
        explode: true
        in: query
        name: MessageType
        required: false
        schema:
          $ref: '#/components/schemas/MessageType'
        style: form
      - description: Inbound Message Status.
        explode: true
        in: query
        name: InboundMessageStatus
        required: false
        schema:
          $ref: '#/components/schemas/InboundMessageStatus'
        style: form
      - description: Sender unqiue identifier.
        explode: true
        in: query
        name: SenderId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: From date and time when the message was submitted to the Notifications
          System.
        explode: true
        in: query
        name: DateFrom
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: To date and time when the message was submitted to the Notifications
          System.
        explode: true
        in: query
        name: DateTo
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Page index (defaults to 1 if not provided).
        explode: true
        in: query
        name: PageIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Page size (defaults to 50 if not provided).
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort field
        explode: true
        in: query
        name: SortField
        required: false
        schema:
          type: string
        style: form
      - description: Sort direction
        explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          $ref: '#/components/schemas/SortDirection'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundMessages'
            application/xml:
              schema:
                $ref: '#/components/schemas/InboundMessages'
          description: Success
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
      summary: "This method allows for the retrieval of all messages in the Notifications\
        \ System Inbound Queue. \r\nTo limit the amount of data returned, the application\
        \ consuming the API has \r\nthe option to control the amount of data received\
        \ using the available pagination \r\nparameters. The PageSize parameter is\
        \ used to limit the number of records \r\nreturned per page. If this is not\
        \ provided, it defaults to a limit of 50 records. \r\nThe PageIndex parameter\
        \ is used to navigate through pages. SortField and \r\nSortDirection parameters\
        \ are used to control the sorting of the results. \r\nThe supported sorting\
        \ fields are as follows: MessageType, MessagePriority, \r\nInboundMessageStatus,\
        \ and DateCreated (default)."
      tags:
      - Inbound Messages
      x-csharp-action: GetApiV1InboundMessages
  /api/v1/batches/{batchId}/messages:
    get:
      parameters:
      - description: "Batch unique identifier as provided when the original \r\nmessage\
          \ request was submitted."
        explode: false
        in: path
        name: batchId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Page index (defaults to 1 if not provided).
        explode: true
        in: query
        name: PageIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Page size (defaults to 50 if not provided).
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort field
        explode: true
        in: query
        name: SortField
        required: false
        schema:
          type: string
        style: form
      - description: Sort direction
        explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          $ref: '#/components/schemas/SortDirection'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryReports'
            application/xml:
              schema:
                $ref: '#/components/schemas/DeliveryReports'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
      summary: "This method allows for the retrieval of multiple delivery reports\
        \ (DLR) for all \r\nthe messages within a batch. Each delivery report will\
        \ contain the status of the \r\nsubmitted message and the original submitted\
        \ message details. This method will be used \r\nby an application to determine\
        \ the status of the submitted message at any point in time. \r\nNote, that\
        \ delivery reports are also provided through the provided Callback URL (Recommended\
        \ \r\nMethod) when submitting a new message request. This allows an application\
        \ to receive the \r\ndelivery report instantaneously when the status of a\
        \ message has changed. \r\n\r\nTo limit the amount of data returned, the application\
        \ consuming the API has \r\nthe option to control the amount of data received\
        \ using the available pagination \r\nparameters. The PageSize parameter is\
        \ used to limit the number of records \r\nreturned per page. If this is not\
        \ provided, it defaults to a limit of 50 records. \r\nThe PageIndex parameter\
        \ is used to navigate through pages. SortField and \r\nSortDirection parameters\
        \ are used to control the sorting of the results. \r\nThe supported sorting\
        \ fields are as follows: Subject, MessageType, MessagePriority, \r\nMessageStatus,\
        \ ScheduledDeliveryDate, and DateCreated (default)."
      tags:
      - Message Batches
      x-csharp-action: GetApiV1BatchesMessagesByBatchId
  /api/v1/batches:
    post:
      requestBody:
        content:
          application/json:
            schema:
              description: Message Batch Request Collection
              items:
                $ref: '#/components/schemas/MessageRequest'
              type: array
              xml:
                name: MessageRequests
                wrapped: true
          application/xml:
            schema:
              description: Message Batch Request Collection
              items:
                $ref: '#/components/schemas/MessageRequest'
              type: array
              xml:
                name: MessageRequests
                wrapped: true
        description: MessageRequests object containing a collection of Message objects
          to be sent.
      responses:
        "201":
          content:
            application/json:
              schema:
                description: Message Batch Collection
                items:
                  $ref: '#/components/schemas/InboundMessageBatch'
                type: array
                xml:
                  name: MessageBatches
                  wrapped: true
            application/xml:
              schema:
                description: Message Batch Collection
                items:
                  $ref: '#/components/schemas/InboundMessageBatch'
                type: array
                xml:
                  name: MessageBatches
                  wrapped: true
          description: Created
        "400":
          content:
            application/json:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
            application/xml:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: "This method allows an application to send multiple message types \r\
        \nwithin the same request. The method allows an application to send \r\nmessages\
        \ to either individual or multiple recipients. This method is \r\nalso useful\
        \ in scenarios where different messages (body text) need \r\nto be sent to\
        \ a number of recipients."
      tags:
      - Message Batches
      x-csharp-action: PostApiV1Batches
  /api/v1/batches/{batchId}:
    delete:
      parameters:
      - description: Batch unique identifier.
        explode: false
        in: path
        name: batchId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
            application/xml:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: "This method allows an application to delete all messages within a\
        \ batch. \r\nIf a messages are awaiting delivery (Pending status), due to\
        \ a future scheduled \r\ndelivery date, the application will be able to delete\
        \ batch messages. \r\nIf messages are enroute through the service provider\
        \ channels, deletion will \r\nnot be possible."
      tags:
      - Message Batches
      x-csharp-action: DeleteApiV1BatchesByBatchId
    put:
      parameters:
      - description: Batch unique identifier.
        explode: false
        in: path
        name: batchId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMessageBatchRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/UpdateMessageBatchRequest'
        description: Message object containing the new message details to be updated.
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundMessageBatch'
            application/xml:
              schema:
                $ref: '#/components/schemas/InboundMessageBatch'
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
            application/xml:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: "This method allows an application to update all messages within a\
        \ batch.\r\nNote that the update is dependent on the ClientReference and MessageType\
        \ \r\nfields, that is, if a batch contains multiple message types, only the\
        \ \r\nmessages of the type as defined in the MessageBatchRequest object will\
        \ be \r\nupdated. Also, only the messages identified by the ClientReference\
        \ will be updated. \r\nNote messages within a batch can be updated if these\
        \ are awaiting delivery \r\n(Pending status). If messages are enroute through\
        \ the service provider \r\nchannels, an update will not be possible. Also,\
        \ if message recipients \r\nneed to be updated for a single message use the\
        \ \r\n\"PUT api/v1/messages/{messageId}\" method."
      tags:
      - Message Batches
      x-csharp-action: PutApiV1BatchesByBatchId
  /api/v1/batches/{batchId}/schedules:
    put:
      parameters:
      - description: Batch unique identifier.
        explode: false
        in: path
        name: batchId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateScheduledMessageBatchRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/UpdateScheduledMessageBatchRequest'
        description: MessageSchedule object containing the Scheduled Delivery Date
          to be updated.
      responses:
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
            application/xml:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: "This method allows an application to update the Scheduled Delivery\
        \ Date field \r\nfor all messages within a batch. Note, messages within a\
        \ batch can be updated \r\nif these are awaiting delivery (Pending status).\
        \ If messages are enroute \r\nthrough the service provider channels, an update\
        \ will not be possible."
      tags:
      - Message Batches
      x-csharp-action: PutApiV1BatchesSchedulesByBatchId
  /api/v1/message-pricing:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalculateMessageCost'
          application/xml:
            schema:
              $ref: '#/components/schemas/CalculateMessageCost'
        description: MessageQuote object containing message information for the total
          cost calculation.
      responses:
        "200":
          content:
            application/json:
              schema:
                description: Message Receipt Collection
                items:
                  $ref: '#/components/schemas/MessageReceipt'
                type: array
                xml:
                  name: MessageReceipts
                  wrapped: true
            application/xml:
              schema:
                description: Message Receipt Collection
                items:
                  $ref: '#/components/schemas/MessageReceipt'
                type: array
                xml:
                  name: MessageReceipts
                  wrapped: true
          description: Success
        "400":
          content:
            application/json:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
            application/xml:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: "This method allows an application to calculate the total cost to send\
        \ \r\na new Message Request. The method currently supports both SMS and Email."
      tags:
      - Message Pricing
      x-csharp-action: PostApiV1MessagePricing
  /api/v1/schedules:
    get:
      parameters:
      - description: Unique reference generated by the Notifications Portal to identify
          a group of messages posted in bulk.
        explode: true
        in: query
        name: BatchId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Unique reference provided by the client application while submitting
          a new message.
        explode: true
        in: query
        name: ClientReference
        required: false
        schema:
          type: string
        style: form
      - description: Message Type.
        explode: true
        in: query
        name: MessageType
        required: false
        schema:
          $ref: '#/components/schemas/MessageType'
        style: form
      - description: Sender unqiue identifier.
        explode: true
        in: query
        name: SenderId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: From date and time when the message is scheduled for delivery.
        explode: true
        in: query
        name: ScheduledDeliveryDateFrom
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: To date and time when the message is scheduled for delivery.
        explode: true
        in: query
        name: ScheduledDeliveryDateTo
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Page index (defaults to 1 if not provided).
        explode: true
        in: query
        name: PageIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Page size (defaults to 50 if not provided).
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort field
        explode: true
        in: query
        name: SortField
        required: false
        schema:
          type: string
        style: form
      - description: Sort direction
        explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          $ref: '#/components/schemas/SortDirection'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryReports'
            application/xml:
              schema:
                $ref: '#/components/schemas/DeliveryReports'
          description: Success
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
      summary: "This method allows for the retrieval of all scheduled messages from\
        \ the current date.\r\nTo limit the amount of data returned, the application\
        \ consuming the API has \r\nthe option to control the amount of data received\
        \ using the available pagination \r\nparameters. The PageSize parameter is\
        \ used to limit the number of records \r\nreturned per page. If this is not\
        \ provided, it defaults to a limit of 50 records. \r\nThe PageIndex parameter\
        \ is used to navigate through pages. SortField and \r\nSortDirection parameters\
        \ are used to control the sorting of the results. \r\nThe supported sorting\
        \ fields are as follows: Subject, MessageType, MessagePriority, \r\nMessageStatus,\
        \ ScheduledDeliveryDate (default), and DateCreated."
      tags:
      - Message Scheduling
      x-csharp-action: GetApiV1Schedules
  /api/v1/schedules/{year}/{month}/{day}:
    get:
      parameters:
      - description: Year
        explode: false
        in: path
        name: year
        required: true
        schema:
          format: int32
          maxLength: 4
          minLength: 4
          type: integer
        style: simple
      - description: Month
        explode: false
        in: path
        name: month
        required: true
        schema:
          format: int32
          maximum: 12
          minimum: 1
          type: integer
        style: simple
      - description: Day
        explode: false
        in: path
        name: day
        required: true
        schema:
          format: int32
          maximum: 31
          minimum: 1
          type: integer
        style: simple
      - description: Page index (defaults to 1 if not provided).
        explode: true
        in: query
        name: PageIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Page size (defaults to 50 if not provided).
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort field
        explode: true
        in: query
        name: SortField
        required: false
        schema:
          type: string
        style: form
      - description: Sort direction
        explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          $ref: '#/components/schemas/SortDirection'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryReports'
            application/xml:
              schema:
                $ref: '#/components/schemas/DeliveryReports'
          description: Success
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
      summary: "This method allows for the retrieval of all scheduled messages for\
        \ a specific date.\r\nTo limit the amount of data returned, the application\
        \ consuming the API has \r\nthe option to control the amount of data received\
        \ using the available pagination \r\nparameters. The PageSize parameter is\
        \ used to limit the number of records \r\nreturned per page. If this is not\
        \ provided, it defaults to a limit of 50 records. \r\nThe PageIndex parameter\
        \ is used to navigate through pages. SortField and \r\nSortDirection parameters\
        \ are used to control the sorting of the results. \r\nThe supported sorting\
        \ fields are as follows: Subject, MessageType, MessagePriority, \r\nMessageStatus,\
        \ ScheduledDeliveryDate (default), and DateCreated."
      tags:
      - Message Scheduling
      x-csharp-action: GetApiV1SchedulesByYearAndMonthAndDay
  /api/v1/messages/{messageId}:
    delete:
      parameters:
      - description: Message unique identifier.
        explode: false
        in: path
        name: messageId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
            application/xml:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: "This method allows an application to delete a message stored \r\n\
        by the Notifications Portal. If the message is awaiting delivery (Pending\
        \ status), \r\ndue to a future scheduled delivery date, the application will\
        \ be able to \r\ndelete the message. If the message is enroute through the\
        \ service provider channels, \r\ndeletion will not be possible. Note that\
        \ the method allows only for the deletion \r\nof a single message, single\
        \ recipient as identified by the provided Message \r\nUnique Identifier."
      tags:
      - Messages
      x-csharp-action: DeleteApiV1MessagesByMessageId
    get:
      parameters:
      - description: Message unique identifier.
        explode: false
        in: path
        name: messageId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryReport'
            application/xml:
              schema:
                $ref: '#/components/schemas/DeliveryReport'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: "Retrieve the delivery report (DLR) for the message as specified in\
        \ the messageId parameter. \r\nThe delivery report will contain both the delivery\
        \ status of the message as provided by \r\nthe service operator and the original\
        \ submitted message details. For SMS message types, \r\nthis is the piece\
        \ of information sent back by the mobile network provider containing whether\
        \ \r\nthe message was successfully delivered or if the delivery has failed.\
        \ This method will be used \r\nby an application to determine the status of\
        \ the submitted message at any point in time. \r\nNote, that delivery reports\
        \ are also provided through the provided Callback URL (Recommended \r\nMethod)\
        \ when submitting a new message request. This allows an application to receive\
        \ the \r\ndelivery report instantaneously when the status of a message has\
        \ changed."
      tags:
      - Messages
      x-csharp-action: GetApiV1MessagesByMessageId
    put:
      parameters:
      - description: Message unique identifier.
        explode: false
        in: path
        name: messageId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMessageRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/UpdateMessageRequest'
        description: Message object containing the new message details to be updated.
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBatch'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageBatch'
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
            application/xml:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: "This method allows application to update the details of an already\
        \ submitted \r\nmessage stored by the Notifications Portal. If the message\
        \ is awaiting delivery (Pending status), \r\ndue to a future scheduled delivery\
        \ date, the application will be able to update any \r\nof the details submitted.\
        \ If the message is enroute through the service provider channels, \r\nan\
        \ update will not be possible. Note that the method allows only for the update\
        \ of a single \r\nmessage, single recipient as identified by the provided\
        \ Message Unique Identifier."
      tags:
      - Messages
      x-csharp-action: PutApiV1MessagesByMessageId
  /api/v1/messages:
    get:
      parameters:
      - description: Unique reference generated by the Notifications Portal to identify
          a group of messages posted in bulk.
        explode: true
        in: query
        name: BatchId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Unique reference provided by the client application while submitting
          a new message.
        explode: true
        in: query
        name: ClientReference
        required: false
        schema:
          type: string
        style: form
      - description: Message Type.
        explode: true
        in: query
        name: MessageType
        required: false
        schema:
          $ref: '#/components/schemas/MessageType'
        style: form
      - description: Message Status.
        explode: true
        in: query
        name: MessageStatus
        required: false
        schema:
          $ref: '#/components/schemas/MessageStatus'
        style: form
      - description: Sender unqiue identifier.
        explode: true
        in: query
        name: SenderId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: From date and time when the message is scheduled for delivery.
        explode: true
        in: query
        name: ScheduledDeliveryDateFrom
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: To date and time when the message is scheduled for delivery.
        explode: true
        in: query
        name: ScheduledDeliveryDateTo
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Page index (defaults to 1 if not provided).
        explode: true
        in: query
        name: PageIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Page size (defaults to 50 if not provided).
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort field
        explode: true
        in: query
        name: SortField
        required: false
        schema:
          type: string
        style: form
      - description: Sort direction
        explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          $ref: '#/components/schemas/SortDirection'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryReports'
            application/xml:
              schema:
                $ref: '#/components/schemas/DeliveryReports'
          description: Success
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
      summary: "This method allows for the retrieval of all messages stored by the\
        \ system. \r\nTo limit the amount of data returned, the application consuming\
        \ the API has \r\nthe option to control the amount of data received using\
        \ the available pagination \r\nparameters. The PageSize parameter is used\
        \ to limit the number of records \r\nreturned per page. If this is not provided,\
        \ it defaults to a limit of 50 records. \r\nThe PageIndex parameter is used\
        \ to navigate through pages. SortField and \r\nSortDirection parameters are\
        \ used to control the sorting of the results. \r\nThe supported sorting fields\
        \ are as follows: Subject, MessageType, MessagePriority, \r\nMessageStatus,\
        \ ScheduledDeliveryDate (default), and DateCreated."
      tags:
      - Messages
      x-csharp-action: GetApiV1Messages
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMessageRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateMessageRequest'
        description: MessageRequest object containing the message data to be sent.
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundMessageBatch'
            application/xml:
              schema:
                $ref: '#/components/schemas/InboundMessageBatch'
          description: Created
        "400":
          content:
            application/json:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
            application/xml:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: "This method allows an application to send a new Message Request. \r\
        \nThe method supports various message types (currently SMS or Email) and \r\
        \ncan be used by the application to send a message to either  \r\nindividual\
        \ or multiple recipients."
      tags:
      - Messages
      x-csharp-action: PostApiV1Messages
  /api/v1/messages/{messageId}/schedules:
    put:
      parameters:
      - description: Message unique identifier.
        explode: false
        in: path
        name: messageId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateScheduledMessageRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/UpdateScheduledMessageRequest'
        description: MessageSchedule object containing the Scheduled Delivery Date
          to be updated.
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBatch'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageBatch'
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
            application/xml:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: "This method allows an application to update the Scheduled Delivery\
        \ Date field \r\nfor a single message as specified by the messageId parameter.\
        \ Note, a message \r\ncan only be updated if the message is awaiting delivery\
        \ (Pending status). \r\nIf the message is enroute through the service provider\
        \ channels, an update \r\nwill not be possible."
      tags:
      - Messages
      x-csharp-action: PutApiV1MessagesSchedulesByMessageId
  /api/v1/subscribers/{subscriberId}:
    delete:
      parameters:
      - description: Subscriber unique identifier.
        explode: false
        in: path
        name: subscriberId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
            application/xml:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: This method allows for the deletion of a subscriber stored by the Notifications
        Portal.
      tags:
      - Subscribers
      x-csharp-action: DeleteApiV1SubscribersBySubscriberId
    get:
      parameters:
      - description: Subscriber unique identifier.
        explode: false
        in: path
        name: subscriberId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
            application/xml:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: This method allows for the retrieval of a Subscriber object details.
      tags:
      - Subscribers
      x-csharp-action: GetApiV1SubscribersBySubscriberId
    put:
      parameters:
      - description: Subscriber unique identifier.
        explode: false
        in: path
        name: subscriberId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriberRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/UpdateSubscriberRequest'
        description: Subscriber object.
      responses:
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
            application/xml:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: This method allows for an application to update an existing Subscriber
        object.
      tags:
      - Subscribers
      x-csharp-action: PutApiV1SubscribersBySubscriberId
  /api/v1/subscribers:
    get:
      parameters:
      - description: Group unique identifier
        explode: true
        in: query
        name: GroupId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Email Address
        explode: true
        in: query
        name: Email
        required: false
        schema:
          pattern: "[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,64}"
          type: string
        style: form
      - description: Mobile Number
        explode: true
        in: query
        name: MobileNo
        required: false
        schema:
          pattern: "^\\d{10,15}$"
          type: string
        style: form
      - description: Page index (defaults to 1 if not provided).
        explode: true
        in: query
        name: PageIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Page size (defaults to 50 if not provided).
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort field
        explode: true
        in: query
        name: SortField
        required: false
        schema:
          type: string
        style: form
      - description: Sort direction
        explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          $ref: '#/components/schemas/SortDirection'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscribers'
            application/xml:
              schema:
                $ref: '#/components/schemas/Subscribers'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
      summary: "This method allows for the retrieval of all subscribers stored by\
        \ the system. \r\n\r\nTo limit the amount of data returned, the application\
        \ consuming the API has \r\nthe option to control the amount of data received\
        \ using the available pagination \r\nparameters. The PageSize parameter is\
        \ used to limit the number of records \r\nreturned per page. If this is not\
        \ provided, it defaults to a limit of 50 records. \r\nThe PageIndex parameter\
        \ is used to navigate through pages. SortField and \r\nSortDirection parameters\
        \ are used to control the sorting of the results. \r\nThe supported sorting\
        \ fields are as follows: FirstName, LastName (default), \r\nDisplayName, Email,\
        \ and MobileNo."
      tags:
      - Subscribers
      x-csharp-action: GetApiV1Subscribers
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriberRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateSubscriberRequest'
        description: Subscriber object.
      responses:
        "201":
          content:
            application/json:
              schema:
                format: uuid
                type: string
            application/xml:
              schema:
                format: uuid
                type: string
          description: Created
        "400":
          content:
            application/json:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
            application/xml:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: This method allows for the creation of a new Subscriber.
      tags:
      - Subscribers
      x-csharp-action: PostApiV1Subscribers
  /api/v1/subscribers/{subscriberId}/groups:
    get:
      parameters:
      - description: Subscriber unique identifier.
        explode: false
        in: path
        name: subscriberId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                description: Subscriber Group Collection
                items:
                  $ref: '#/components/schemas/Group'
                type: array
                xml:
                  name: Groups
                  wrapped: true
            application/xml:
              schema:
                description: Subscriber Group Collection
                items:
                  $ref: '#/components/schemas/Group'
                type: array
                xml:
                  name: Groups
                  wrapped: true
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
      summary: This method allows for the retrieval of the list of groups a subscriber
        is subscribed to.
      tags:
      - Subscribers
      x-csharp-action: GetApiV1SubscribersGroupsBySubscriberId
  /api/v1/groups/{groupId}:
    delete:
      parameters:
      - description: Group unique identifier.
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
            application/xml:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: This method allows for the deletion of a group stored by the Notifications
        Portal.
      tags:
      - Subscriptions (Contact Groups)
      x-csharp-action: DeleteApiV1GroupsByGroupId
    get:
      parameters:
      - description: Group unique identifier.
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: This method allows for the retrieval of a Group object.
      tags:
      - Subscriptions (Contact Groups)
      x-csharp-action: GetApiV1GroupsByGroupId
    put:
      parameters:
      - description: Group unique identifier.
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriberGroupRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/UpdateSubscriberGroupRequest'
        description: Group object.
      responses:
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
            application/xml:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: This method allows for an application to update a existing group object.
      tags:
      - Subscriptions (Contact Groups)
      x-csharp-action: PutApiV1GroupsByGroupId
  /api/v1/groups:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                description: Subscriber Group Collection
                items:
                  $ref: '#/components/schemas/Group'
                type: array
                xml:
                  name: Groups
                  wrapped: true
            application/xml:
              schema:
                description: Subscriber Group Collection
                items:
                  $ref: '#/components/schemas/Group'
                type: array
                xml:
                  name: Groups
                  wrapped: true
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: This method allows for the retrieval of the available contact groups
        stored by the Notifications Portal.
      tags:
      - Subscriptions (Contact Groups)
      x-csharp-action: GetApiV1Groups
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateGroupRequest'
        description: Group object.
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group'
          description: Created
        "400":
          content:
            application/json:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
            application/xml:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: This method allows for the creation of a new Group.
      tags:
      - Subscriptions (Contact Groups)
      x-csharp-action: PostApiV1Groups
  /api/v1/groups/{groupId}/messages:
    post:
      parameters:
      - description: Group unique identifier.
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMessageGroupRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateMessageGroupRequest'
        description: Message object containing the message data to be sent.
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundMessageBatch'
            application/xml:
              schema:
                $ref: '#/components/schemas/InboundMessageBatch'
          description: Created
        "400":
          content:
            application/json:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
            application/xml:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: This method allows an application to send a new Message Request to
        all contacts within a Group.
      tags:
      - Subscriptions (Contact Groups)
      x-csharp-action: PostApiV1GroupsMessagesByGroupId
  /api/v1/groups/{groupId}/subscribers:
    get:
      parameters:
      - description: Group unique identifier.
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Page index (defaults to 1 if not provided).
        explode: true
        in: query
        name: PageIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Page size (defaults to 50 if not provided).
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort field
        explode: true
        in: query
        name: SortField
        required: false
        schema:
          type: string
        style: form
      - description: Sort direction
        explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          $ref: '#/components/schemas/SortDirection'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscribers'
            application/xml:
              schema:
                $ref: '#/components/schemas/Subscribers'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
      summary: "This method allows for the retrieval of contacts subscribed to a group.\
        \ \r\n\r\nTo limit the amount of data returned, the application consuming\
        \ the API has \r\nthe option to control the amount of data received using\
        \ the available pagination \r\nparameters. The PageSize parameter is used\
        \ to limit the number of records \r\nreturned per page. If this is not provided,\
        \ it defaults to a limit of 50 records. \r\nThe PageIndex parameter is used\
        \ to navigate through pages. SortField and \r\nSortDirection parameters are\
        \ used to control the sorting of the results. \r\nThe supported sorting fields\
        \ are as follows: FirstName, LastName (default), DisplayName, \r\nEmail, and\
        \ MobileNo."
      tags:
      - Subscriptions (Contact Groups)
      x-csharp-action: GetApiV1GroupsSubscribersByGroupId
    post:
      parameters:
      - description: Group unique identifier.
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriberRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateSubscriberRequest'
        description: Subscriber object.
      responses:
        "201":
          content:
            application/json:
              schema:
                format: uuid
                type: string
            application/xml:
              schema:
                format: uuid
                type: string
          description: Created
        "400":
          content:
            application/json:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
            application/xml:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: "This method allows for the creation of a new Subscriber \r\nand subscription\
        \ to a specific Group identified by the \r\ngroupId parameter."
      tags:
      - Subscriptions (Contact Groups)
      x-csharp-action: PostApiV1GroupsSubscribersByGroupId
  /api/v1/groups/{groupId}/subscriptions:
    post:
      parameters:
      - description: Group unique identifier.
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionRequest'
        description: Subscription object containing Subscriber unique identifier.
      responses:
        "201":
          description: Created
        "400":
          content:
            application/json:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
            application/xml:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: "This method allows an application to bind an existing subscriber as\
        \ \r\nspecified by the subscriberId to a specific Group identified by \r\n\
        the groupId parameter."
      tags:
      - Subscriptions (Contact Groups)
      x-csharp-action: PostApiV1GroupsSubscriptionsByGroupId
  /api/v1/groups/{groupId}/subscribers/{subscriberId}:
    delete:
      parameters:
      - description: Group unique identifier.
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Subscriber unique identifier.
        explode: false
        in: path
        name: subscriberId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
            application/xml:
              schema:
                description: Message Request Collection
                items:
                  $ref: '#/components/schemas/Validation'
                type: array
                xml:
                  name: Validations
                  wrapped: true
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: "This method allows for an application to manage opt-outs and unbind\
        \ \r\nan existing subscriber as specified by the subscriberId from a \r\n\
        specific Group identified by the groupId parameter."
      tags:
      - Subscriptions (Contact Groups)
      x-csharp-action: DeleteApiV1GroupsSubscribersByGroupIdAndSubscriberId
components:
  schemas:
    ApiKey:
      additionalProperties: false
      description: API Key Information.
      example:
        Secret: Secret
        ExpiryDate: 2000-01-23T04:56:07.000+00:00
        Key: Key
        Name: Name
      properties:
        Name:
          description: Friendly name to identify the usage of the API Key.
          nullable: true
          type: string
        Key:
          description: API Key unique identifier.
          nullable: true
          type: string
        Secret:
          description: Secret Key (Must be refreshed every seven days or as per the
            indicated Expiry Date field).
          nullable: true
          type: string
        ExpiryDate:
          description: Expiry Date. If null the Secret Key never expires (only used
            for testing).
          format: date-time
          nullable: true
          type: string
      type: object
      xml:
        name: ApiKey
    Attachment:
      additionalProperties: false
      description: Message Attachment object.
      example:
        ContentStream: ContentStream
        ContentType: ContentType
        FileName: FileName
      properties:
        ContentStream:
          description: The file content stream for this attachment.
          format: byte
          type: string
        FileName:
          description: File name.
          minLength: 1
          type: string
        ContentType:
          description: Content type (MIME) associated with this attachment.
          minLength: 1
          type: string
      required:
      - ContentStream
      - ContentType
      - FileName
      type: object
      xml:
        name: Attachment
    AttachmentUri:
      additionalProperties: false
      description: Uniform Resource Identifier used to identify an attachement and
        location to download it.
      example:
        ContentType: ContentType
        Size: 0
        FileName: FileName
        Uri: Uri
        MD5: MD5
      properties:
        Uri:
          description: URI to download attachement.
          nullable: true
          type: string
        Size:
          description: File size.
          format: int32
          type: integer
        MD5:
          description: File checksum.
          nullable: true
          type: string
        FileName:
          description: File name.
          minLength: 1
          type: string
        ContentType:
          description: Content type (MIME) associated with this attachment.
          minLength: 1
          type: string
      required:
      - ContentType
      - FileName
      type: object
      xml:
        name: Attachment
    CalculateMessageCost:
      additionalProperties: false
      description: Message Quote Request
      example:
        MessageContent:
        - Language: null
          Attachments:
          - ContentStream: ContentStream
            ContentType: ContentType
            FileName: FileName
          - ContentStream: ContentStream
            ContentType: ContentType
            FileName: FileName
          Subject: Subject
          MessageBody: MessageBody
        - Language: null
          Attachments:
          - ContentStream: ContentStream
            ContentType: ContentType
            FileName: FileName
          - ContentStream: ContentStream
            ContentType: ContentType
            FileName: FileName
          Subject: Subject
          MessageBody: MessageBody
        MessagePriority: null
        Contacts:
        - MobileNo: "0035699999999"
          Email: email@domain.com
          FirstName: FirstName
          DisplayName: DisplayName
          Title: null
          PreferredLanguage: null
          LastName: LastName
        - MobileNo: "0035699999999"
          Email: email@domain.com
          FirstName: FirstName
          DisplayName: DisplayName
          Title: null
          PreferredLanguage: null
          LastName: LastName
        SenderId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        MessageType: null
      properties:
        SenderId:
          description: Sender identifier. This field is used by the Notifications
            Portal to specify the sender name for the message.
          format: uuid
          type: string
        MessageType:
          $ref: '#/components/schemas/MessageType'
        MessagePriority:
          $ref: '#/components/schemas/MessagePriority'
        Contacts:
          description: "The Contact Address is the delivery address where the message\
            \ will be sent to.\r\nThis can be either an MSISDN or e-mail address depending\
            \ on the message type."
          items:
            $ref: '#/components/schemas/Contact'
          minItems: 1
          nullable: true
          type: array
          xml:
            name: Contacts
            wrapped: true
        MessageContent:
          description: Message Content.
          items:
            $ref: '#/components/schemas/MessageContent'
          minItems: 1
          nullable: true
          type: array
          xml:
            name: MessageContent
            wrapped: true
      required:
      - MessagePriority
      - MessageType
      - SenderId
      type: object
      xml:
        name: MessageQuote
    Contact:
      additionalProperties: false
      description: Contact object
      example:
        MobileNo: "0035699999999"
        Email: email@domain.com
        FirstName: FirstName
        DisplayName: DisplayName
        Title: null
        PreferredLanguage: null
        LastName: LastName
      properties:
        DisplayName:
          description: Display Name
          maxLength: 400
          minLength: 0
          nullable: true
          type: string
        Title:
          $ref: '#/components/schemas/Salutation'
        FirstName:
          description: First Name
          maxLength: 160
          minLength: 0
          nullable: true
          type: string
        LastName:
          description: Last Email
          maxLength: 200
          minLength: 0
          nullable: true
          type: string
        Email:
          description: Email Address
          example: email@domain.com
          nullable: true
          pattern: "[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,64}"
          type: string
        MobileNo:
          description: Mobile Number
          example: "0035699999999"
          nullable: true
          pattern: "^\\d{10,15}$"
          type: string
        PreferredLanguage:
          $ref: '#/components/schemas/Language'
      type: object
      xml:
        name: Contact
    CreateGroupRequest:
      additionalProperties: false
      description: Create Group Request
      example:
        Name: Name
      properties:
        Name:
          description: Group Name
          maxLength: 50
          minLength: 0
          type: string
      required:
      - Name
      type: object
      xml:
        name: Group
    CreateMessageGroupRequest:
      additionalProperties: false
      description: Message Request
      example:
        CallbackUrl: https://domain.com/listener
        MessageContent:
        - Language: null
          Attachments:
          - ContentStream: ContentStream
            ContentType: ContentType
            FileName: FileName
          - ContentStream: ContentStream
            ContentType: ContentType
            FileName: FileName
          Subject: Subject
          MessageBody: MessageBody
        - Language: null
          Attachments:
          - ContentStream: ContentStream
            ContentType: ContentType
            FileName: FileName
          - ContentStream: ContentStream
            ContentType: ContentType
            FileName: FileName
          Subject: Subject
          MessageBody: MessageBody
        MessagePriority: null
        ClientReference: ClientReference
        SenderId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ScheduledDeliveryDate: 2000-01-23T04:56:07.000+00:00
        MessageType: null
      properties:
        MessageContent:
          description: Message Content.
          items:
            $ref: '#/components/schemas/MessageContent'
          nullable: true
          type: array
          xml:
            name: MessageContent
            wrapped: true
        ClientReference:
          description: Unique reference generated by the client application.
          maxLength: 64
          minLength: 0
          type: string
        MessageType:
          $ref: '#/components/schemas/MessageType'
        MessagePriority:
          $ref: '#/components/schemas/MessagePriority'
        SenderId:
          description: Sender identifier. This field is used by the Notifications
            Portal to specify the sender name for the message.
          format: uuid
          type: string
        CallbackUrl:
          description: "If provided, the Notifications Portal will deliver a receipt\
            \ back to the application \r\nthrough the HTTP POST method for the provided\
            \ URL. \r\nIf URL is not provided the default API URL will be used."
          example: https://domain.com/listener
          maxLength: 800
          minLength: 0
          nullable: true
          type: string
        ScheduledDeliveryDate:
          description: "The date and time when the message will be scheduled for delivery.\
            \ \r\nFor instant messaging provide the current date and time."
          format: date-time
          type: string
      required:
      - ClientReference
      - MessagePriority
      - MessageType
      - ScheduledDeliveryDate
      - SenderId
      type: object
      xml:
        name: Message
    CreateMessageRequest:
      additionalProperties: false
      description: Message Request
      example:
        CallbackUrl: https://domain.com/listener
        MessageContent:
        - Language: null
          Attachments:
          - ContentStream: ContentStream
            ContentType: ContentType
            FileName: FileName
          - ContentStream: ContentStream
            ContentType: ContentType
            FileName: FileName
          Subject: Subject
          MessageBody: MessageBody
        - Language: null
          Attachments:
          - ContentStream: ContentStream
            ContentType: ContentType
            FileName: FileName
          - ContentStream: ContentStream
            ContentType: ContentType
            FileName: FileName
          Subject: Subject
          MessageBody: MessageBody
        Contacts:
        - MobileNo: "0035699999999"
          Email: email@domain.com
          FirstName: FirstName
          DisplayName: DisplayName
          Title: null
          PreferredLanguage: null
          LastName: LastName
        - MobileNo: "0035699999999"
          Email: email@domain.com
          FirstName: FirstName
          DisplayName: DisplayName
          Title: null
          PreferredLanguage: null
          LastName: LastName
        MessagePriority: null
        ClientReference: ClientReference
        SenderId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ScheduledDeliveryDate: 2000-01-23T04:56:07.000+00:00
        MessageType: null
      properties:
        Contacts:
          description: "The Contact Address is the delivery address where the message\
            \ will be sent to.\r\nThis can be either an MSISDN or e-mail address depending\
            \ on the message type."
          items:
            $ref: '#/components/schemas/Contact'
          nullable: true
          type: array
          xml:
            name: Contacts
            wrapped: true
        MessageContent:
          description: Message Content.
          items:
            $ref: '#/components/schemas/MessageContent'
          nullable: true
          type: array
          xml:
            name: MessageContent
            wrapped: true
        ClientReference:
          description: Unique reference generated by the client application.
          maxLength: 64
          minLength: 0
          type: string
        MessageType:
          $ref: '#/components/schemas/MessageType'
        MessagePriority:
          $ref: '#/components/schemas/MessagePriority'
        SenderId:
          description: Sender identifier. This field is used by the Notifications
            Portal to specify the sender name for the message.
          format: uuid
          type: string
        CallbackUrl:
          description: "If provided, the Notifications Portal will deliver a receipt\
            \ back to the application \r\nthrough the HTTP POST method for the provided\
            \ URL. \r\nIf URL is not provided the default API URL will be used."
          example: https://domain.com/listener
          maxLength: 800
          minLength: 0
          nullable: true
          type: string
        ScheduledDeliveryDate:
          description: "The date and time when the message will be scheduled for delivery.\
            \ \r\nFor instant messaging provide the current date and time."
          format: date-time
          type: string
      required:
      - ClientReference
      - MessagePriority
      - MessageType
      - ScheduledDeliveryDate
      - SenderId
      type: object
      xml:
        name: Message
    CreateSubscriberRequest:
      additionalProperties: false
      description: Create Subscriber Request
      example:
        MobileNo: "0035699999999"
        Email: email@domain.com
        Address: Address
        Locality: Locality
        FirstName: FirstName
        Title: null
        PhoneNoAlt: PhoneNoAlt
        PhoneNo: PhoneNo
        DisplayName: DisplayName
        Country: Country
        PreferredLanguage: null
        LastName: LastName
        PostCode: PostCode
      properties:
        Address:
          description: Full Address Details
          nullable: true
          type: string
        Locality:
          description: Locality
          nullable: true
          type: string
        PostCode:
          description: Post Code
          nullable: true
          type: string
        PhoneNo:
          description: Phone Number
          nullable: true
          type: string
        PhoneNoAlt:
          description: Alternate Phone Number
          nullable: true
          type: string
        Country:
          description: ISO 3166-1 Alpha-2 Country Code
          maxLength: 2
          minLength: 0
          nullable: true
          type: string
        DisplayName:
          description: Display Name
          maxLength: 400
          minLength: 0
          nullable: true
          type: string
        Title:
          $ref: '#/components/schemas/Salutation'
        FirstName:
          description: First Name
          maxLength: 160
          minLength: 0
          nullable: true
          type: string
        LastName:
          description: Last Email
          maxLength: 200
          minLength: 0
          nullable: true
          type: string
        Email:
          description: Email Address
          example: email@domain.com
          nullable: true
          pattern: "[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,64}"
          type: string
        MobileNo:
          description: Mobile Number
          example: "0035699999999"
          nullable: true
          pattern: "^\\d{10,15}$"
          type: string
        PreferredLanguage:
          $ref: '#/components/schemas/Language'
      type: object
      xml:
        name: Subscriber
    CreateSubscriptionRequest:
      additionalProperties: false
      description: Create Subscription Request
      example:
        SubscriberId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        SubscriberId:
          description: Subscriber unique identifier
          format: uuid
          type: string
      required:
      - SubscriberId
      type: object
      xml:
        name: Subscription
    DeliveryReport:
      additionalProperties: false
      description: Delivery Report object
      example:
        DateUpdated: 2000-01-23T04:56:07.000+00:00
        BatchId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        DateCreated: 2000-01-23T04:56:07.000+00:00
        ClientReference: ClientReference
        SenderId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Attachments:
        - ContentType: ContentType
          Size: 0
          FileName: FileName
          Uri: Uri
          MD5: MD5
        - ContentType: ContentType
          Size: 0
          FileName: FileName
          Uri: Uri
          MD5: MD5
        ScheduledDeliveryDate: 2000-01-23T04:56:07.000+00:00
        Subject: Subject
        Contact:
          MobileNo: "0035699999999"
          Email: email@domain.com
          FirstName: FirstName
          DisplayName: DisplayName
          Title: null
          PreferredLanguage: null
          LastName: LastName
        CallbackUrl: https://domain.com/listener
        MessageStatus: null
        Language: null
        MessagePriority: null
        MessageType: null
        MessageId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        MessageBody: MessageBody
      properties:
        MessageId:
          description: Notifications Portal unique identifier.
          format: uuid
          type: string
        BatchId:
          description: "Unique reference generated by the Notifications Portal to\
            \ identify a group of messages posted in bulk. \r\nThis is useful when\
            \ in situations where a group of messages needs to be updated or deleted."
          format: uuid
          type: string
        Contact:
          $ref: '#/components/schemas/Contact'
        Language:
          $ref: '#/components/schemas/Language'
        Subject:
          description: "Message Subject.\r\nConditional - Used only for e-mail message\
            \ types or message types requiring a Subject."
          nullable: true
          type: string
        MessageBody:
          description: Message Body.
          nullable: true
          type: string
        Attachments:
          description: "Message attachment list.\r\nOptional - Used only for e-mail\
            \ message types or message types allowing an attachment."
          items:
            $ref: '#/components/schemas/AttachmentUri'
          nullable: true
          type: array
          xml:
            name: Attachments
            wrapped: true
        MessageStatus:
          $ref: '#/components/schemas/MessageStatus'
        DateCreated:
          description: Date/time when the message was created.
          format: date-time
          type: string
        DateUpdated:
          description: Date/time when the message was last updated.
          format: date-time
          nullable: true
          type: string
        ClientReference:
          description: Unique reference generated by the client application.
          maxLength: 64
          minLength: 0
          type: string
        MessageType:
          $ref: '#/components/schemas/MessageType'
        MessagePriority:
          $ref: '#/components/schemas/MessagePriority'
        SenderId:
          description: Sender identifier. This field is used by the Notifications
            Portal to specify the sender name for the message.
          format: uuid
          type: string
        CallbackUrl:
          description: "If provided, the Notifications Portal will deliver a receipt\
            \ back to the application \r\nthrough the HTTP POST method for the provided\
            \ URL. \r\nIf URL is not provided the default API URL will be used."
          example: https://domain.com/listener
          maxLength: 800
          minLength: 0
          nullable: true
          type: string
        ScheduledDeliveryDate:
          description: "The date and time when the message will be scheduled for delivery.\
            \ \r\nFor instant messaging provide the current date and time."
          format: date-time
          type: string
      required:
      - ClientReference
      - MessagePriority
      - MessageType
      - ScheduledDeliveryDate
      - SenderId
      type: object
      xml:
        name: DeliveryReport
    DeliveryReports:
      additionalProperties: false
      description: Delivery Reports collection object
      example:
        Collection:
        - DateUpdated: 2000-01-23T04:56:07.000+00:00
          BatchId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          DateCreated: 2000-01-23T04:56:07.000+00:00
          ClientReference: ClientReference
          SenderId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Attachments:
          - ContentType: ContentType
            Size: 0
            FileName: FileName
            Uri: Uri
            MD5: MD5
          - ContentType: ContentType
            Size: 0
            FileName: FileName
            Uri: Uri
            MD5: MD5
          ScheduledDeliveryDate: 2000-01-23T04:56:07.000+00:00
          Subject: Subject
          Contact:
            MobileNo: "0035699999999"
            Email: email@domain.com
            FirstName: FirstName
            DisplayName: DisplayName
            Title: null
            PreferredLanguage: null
            LastName: LastName
          CallbackUrl: https://domain.com/listener
          MessageStatus: null
          Language: null
          MessagePriority: null
          MessageType: null
          MessageId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          MessageBody: MessageBody
        - DateUpdated: 2000-01-23T04:56:07.000+00:00
          BatchId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          DateCreated: 2000-01-23T04:56:07.000+00:00
          ClientReference: ClientReference
          SenderId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Attachments:
          - ContentType: ContentType
            Size: 0
            FileName: FileName
            Uri: Uri
            MD5: MD5
          - ContentType: ContentType
            Size: 0
            FileName: FileName
            Uri: Uri
            MD5: MD5
          ScheduledDeliveryDate: 2000-01-23T04:56:07.000+00:00
          Subject: Subject
          Contact:
            MobileNo: "0035699999999"
            Email: email@domain.com
            FirstName: FirstName
            DisplayName: DisplayName
            Title: null
            PreferredLanguage: null
            LastName: LastName
          CallbackUrl: https://domain.com/listener
          MessageStatus: null
          Language: null
          MessagePriority: null
          MessageType: null
          MessageId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          MessageBody: MessageBody
        Page:
          PreviousUri: PreviousUri
          Size: 6
          NextUri: NextUri
          Index: 0
          Count: 1
      properties:
        Page:
          $ref: '#/components/schemas/Page'
        Collection:
          description: Collection of Delivery Reports
          items:
            $ref: '#/components/schemas/DeliveryReport'
          nullable: true
          type: array
          xml:
            name: Collection
            wrapped: true
      type: object
      xml:
        name: DeliveryReports
    Encoding:
      description: Represents the character encoding detected for the message text.
      enum:
      - GSM7
      - UCS2
      type: string
    Error:
      additionalProperties: false
      description: Error Message object.
      example:
        Message: Message
      properties:
        Message:
          description: Error messagee.
          nullable: true
          type: string
      type: object
      xml:
        name: Error
    Group:
      additionalProperties: false
      description: SubscriberGroup object.
      example:
        GroupId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Name: Name
      properties:
        GroupId:
          description: Group unique identifier
          format: uuid
          type: string
        Name:
          description: Group Name
          maxLength: 50
          minLength: 0
          type: string
      required:
      - GroupId
      - Name
      type: object
      xml:
        name: Group
    InboundMessage:
      additionalProperties: false
      description: Inbound Message object containing details about a message request
        in the Notifications System inbound queue.
      example:
        InboundMessageId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ProcessingReport: ProcessingReport
        MessagePriority: null
        DateUpdated: 2000-01-23T04:56:07.000+00:00
        BatchId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        FailedAttempts: 0
        InboundMessageStatus: null
        DateCreated: 2000-01-23T04:56:07.000+00:00
        SenderId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        MessageType: null
        TransactionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        InboundMessageId:
          description: Unique reference used to identify a message waiting processing
            in the inbound queue.
          format: uuid
          type: string
        TransactionId:
          description: Unique reference used to identify a group of batches in the
            inbound queue.
          format: uuid
          type: string
        BatchId:
          description: "Unique reference generated by the Notifications Portal to\
            \ identify a group of messages posted in bulk. \r\nThis is useful when\
            \ in situations where a group of messages needs to be updated or deleted."
          format: uuid
          type: string
        SenderId:
          description: Sender identifier. This field is used by the Notifications
            Portal to specify the sender name for the message.
          format: uuid
          type: string
        MessageType:
          $ref: '#/components/schemas/MessageType'
        MessagePriority:
          $ref: '#/components/schemas/MessagePriority'
        InboundMessageStatus:
          $ref: '#/components/schemas/InboundMessageStatus'
        FailedAttempts:
          description: Number of failed attempts by the Notifications System Backend.
          format: int32
          type: integer
        ProcessingReport:
          description: This field contains the details of any failed attempts or system
            errors.
          nullable: true
          type: string
        DateCreated:
          description: Date/time when the message was created.
          format: date-time
          type: string
        DateUpdated:
          description: Date/time when the message was last updated.
          format: date-time
          nullable: true
          type: string
      type: object
      xml:
        name: InboundMessage
    InboundMessageBatch:
      additionalProperties: false
      description: "Inbound Message batch containing information \r\nabout the batch\
        \ and reference to query \r\ninbound queue processing status."
      example:
        InboundMessageId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        BatchId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        TransactionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        InboundMessageId:
          description: Unique reference used to identify a message waiting processing
            in the inbound queue.
          format: uuid
          type: string
        TransactionId:
          description: Unique reference used to identify a group of batches in the
            inbound queue.
          format: uuid
          type: string
        BatchId:
          description: "Unique reference generated by the Notifications Portal to\
            \ identify a group of messages posted in bulk. \r\nThis is useful when\
            \ in situations where a group of messages needs to be updated or deleted."
          format: uuid
          type: string
      type: object
      xml:
        name: MessageBatch
    InboundMessageStatus:
      description: Inbound Message Status
      enum:
      - "100"
      - "200"
      - "300"
      - "400"
      - "500"
      type: string
    InboundMessages:
      additionalProperties: false
      description: Inbound Messages collection object
      example:
        Collection:
        - InboundMessageId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ProcessingReport: ProcessingReport
          MessagePriority: null
          DateUpdated: 2000-01-23T04:56:07.000+00:00
          BatchId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          FailedAttempts: 0
          InboundMessageStatus: null
          DateCreated: 2000-01-23T04:56:07.000+00:00
          SenderId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          MessageType: null
          TransactionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - InboundMessageId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ProcessingReport: ProcessingReport
          MessagePriority: null
          DateUpdated: 2000-01-23T04:56:07.000+00:00
          BatchId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          FailedAttempts: 0
          InboundMessageStatus: null
          DateCreated: 2000-01-23T04:56:07.000+00:00
          SenderId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          MessageType: null
          TransactionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Page:
          PreviousUri: PreviousUri
          Size: 6
          NextUri: NextUri
          Index: 0
          Count: 1
      properties:
        Page:
          $ref: '#/components/schemas/Page'
        Collection:
          description: Collection of Inbound Messages
          items:
            $ref: '#/components/schemas/InboundMessage'
          nullable: true
          type: array
          xml:
            name: Collection
            wrapped: true
      type: object
      xml:
        name: InboundMessages
    Language:
      enum:
      - en
      - it
      - de
      - fr
      - es
      - mt
      type: string
    MessageBatch:
      additionalProperties: false
      description: Message batch information
      example:
        BatchId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        BatchId:
          description: "Unique reference generated by the Notifications Portal to\
            \ identify a group of messages posted in bulk. \r\nThis is useful when\
            \ in situations where a group of messages needs to be updated or deleted."
          format: uuid
          type: string
      type: object
      xml:
        name: MessageBatch
    MessageContent:
      additionalProperties: false
      description: "The MessageContent object contains the data associated with \r\
        \nthe message to be sent and the Language the message is drafted in."
      example:
        Language: null
        Attachments:
        - ContentStream: ContentStream
          ContentType: ContentType
          FileName: FileName
        - ContentStream: ContentStream
          ContentType: ContentType
          FileName: FileName
        Subject: Subject
        MessageBody: MessageBody
      properties:
        Language:
          $ref: '#/components/schemas/Language'
        Subject:
          description: "Message Subject.\r\nConditional - Used only for e-mail message\
            \ types or message types requiring a Subject."
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        MessageBody:
          description: Message Body.
          minLength: 1
          type: string
        Attachments:
          description: "Message attachment list.\r\nOptional - Used only for e-mail\
            \ message types or message types allowing an attachment."
          items:
            $ref: '#/components/schemas/Attachment'
          nullable: true
          type: array
          xml:
            name: Attachments
            wrapped: true
      required:
      - Language
      - MessageBody
      type: object
      xml:
        name: MessageContent
    MessagePriority:
      description: Message Priority
      enum:
      - "100"
      - "200"
      type: string
    MessageReceipt:
      additionalProperties: false
      description: Message Receipt details.
      example:
        InternationalMessagePrice: 5.637376656633329
        TotalCost: 9.301444243932576
        TotalRecipientsCount: 2
        Language: null
        WarningMessages:
        - WarningMessages
        - WarningMessages
        CharacterCount: 0
        TotalMessagesCount: 7
        MessagePartsCount: 6
        Encoding: null
        LocalMessagePrice: 5.962133916683182
        MessagePartMaxCharacters: 1
        MessageParts:
        - MessageParts
        - MessageParts
      properties:
        Language:
          $ref: '#/components/schemas/Language'
        CharacterCount:
          description: "The number of characters in the message. For SMS type messages,\
            \ depending on the \"Encoding\" \r\nof the text provided, SMS text messages\
            \ are limited to either 160 (GSM-7 encoding equating to \r\n7-bits per\
            \ character) or 70 (UTF encoded messages, such as Maltese, using 16 bits\
            \ per character) \r\ncharacters in length. If a message length exceeds\
            \ 160 characters in case of 7-bit encoding (or \r\n70 characters for UTF\
            \ encoding), the message is split up to multiple separate SMS and sent\
            \ to \r\nthe handset separately, to be concatenated on the receiver's\
            \ end. For GSM-7 encoded long messages, \r\nexceeding 160 characters,\
            \ these are split into 153 character chunks (7 characters used for  \r\
            \nsegmentation information and for concatenation individual messages back\
            \ together). For UTF \r\nencoded long messages, they are split into 67\
            \ character chunks (with 3 characters used for \r\nsegmentation information\
            \ and to concatenate the individual messages back together). Note that\
            \ the \r\nstandard SMS message can only contain a maximum of 1120 bits,\
            \ therefore messages will be \r\nlimited to 7 concatenated messages."
          format: int32
          type: integer
        MessagePartsCount:
          description: "The number of messages the message text will be split into.\
            \ \r\nFor SMS Type Messages, MessageCount will range from 1 to 7, \r\n\
            while for Email Type Messages, the MessageCount property \r\nwill always\
            \ be set to 1."
          format: int32
          type: integer
        MessagePartMaxCharacters:
          description: "The calculated maximum number of characters for each Message\
            \ \r\nPart, based on the message text encoding. This field will only \r\
            \nbe populated for SMS Type Messages."
          format: int32
          nullable: true
          type: integer
        MessageParts:
          description: "This provides a preview for SMS Type Messages of how the message\
            \ text will be \r\nsplit into parts as per the SMS standard."
          items:
            type: string
            xml:
              name: string
          nullable: true
          type: array
          xml:
            name: MessageParts
            wrapped: true
        Encoding:
          $ref: '#/components/schemas/Encoding'
        LocalMessagePrice:
          description: The Local Price per Message in Euro including VAT.
          format: double
          type: number
        InternationalMessagePrice:
          description: The International Price per Message in Euro including VAT.
          format: double
          type: number
        TotalRecipientsCount:
          description: "The total number of recipients that the message will be sent.\r\
            \nRecipients will be grouped by the Country Dialing Code provided."
          format: int32
          type: integer
        TotalMessagesCount:
          description: "The actual total number of messages to be sent. For SMS Type\
            \ Messages this is the \r\ntotal \"MessagePartsCount\" multiplied by the\
            \ \"TotalRecipientsCount\"."
          format: int32
          type: integer
        TotalCost:
          description: The Total Cost to send the Message in Euro including VAT.
          format: double
          type: number
        WarningMessages:
          description: "Warning Messages provided by the Notifications System to be\
            \ \r\ndisplayed by the client application."
          items:
            type: string
            xml:
              name: string
          nullable: true
          type: array
          xml:
            name: WarningMessages
            wrapped: true
      type: object
      xml:
        name: MessageReceipt
    MessageRequest:
      additionalProperties: false
      description: Message Request
      example:
        CallbackUrl: https://domain.com/listener
        MessageContent:
        - Language: null
          Attachments:
          - ContentStream: ContentStream
            ContentType: ContentType
            FileName: FileName
          - ContentStream: ContentStream
            ContentType: ContentType
            FileName: FileName
          Subject: Subject
          MessageBody: MessageBody
        - Language: null
          Attachments:
          - ContentStream: ContentStream
            ContentType: ContentType
            FileName: FileName
          - ContentStream: ContentStream
            ContentType: ContentType
            FileName: FileName
          Subject: Subject
          MessageBody: MessageBody
        Contacts:
        - MobileNo: "0035699999999"
          Email: email@domain.com
          FirstName: FirstName
          DisplayName: DisplayName
          Title: null
          PreferredLanguage: null
          LastName: LastName
        - MobileNo: "0035699999999"
          Email: email@domain.com
          FirstName: FirstName
          DisplayName: DisplayName
          Title: null
          PreferredLanguage: null
          LastName: LastName
        MessagePriority: null
        ClientReference: ClientReference
        SenderId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ScheduledDeliveryDate: 2000-01-23T04:56:07.000+00:00
        MessageType: null
      properties:
        Contacts:
          description: "The Contact Address is the delivery address where the message\
            \ will be sent to.\r\nThis can be either an MSISDN or e-mail address depending\
            \ on the message type."
          items:
            $ref: '#/components/schemas/Contact'
          nullable: true
          type: array
          xml:
            name: Contacts
            wrapped: true
        MessageContent:
          description: Message Content.
          items:
            $ref: '#/components/schemas/MessageContent'
          nullable: true
          type: array
          xml:
            name: MessageContent
            wrapped: true
        ClientReference:
          description: Unique reference generated by the client application.
          maxLength: 64
          minLength: 0
          type: string
        MessageType:
          $ref: '#/components/schemas/MessageType'
        MessagePriority:
          $ref: '#/components/schemas/MessagePriority'
        SenderId:
          description: Sender identifier. This field is used by the Notifications
            Portal to specify the sender name for the message.
          format: uuid
          type: string
        CallbackUrl:
          description: "If provided, the Notifications Portal will deliver a receipt\
            \ back to the application \r\nthrough the HTTP POST method for the provided\
            \ URL. \r\nIf URL is not provided the default API URL will be used."
          example: https://domain.com/listener
          maxLength: 800
          minLength: 0
          nullable: true
          type: string
        ScheduledDeliveryDate:
          description: "The date and time when the message will be scheduled for delivery.\
            \ \r\nFor instant messaging provide the current date and time."
          format: date-time
          type: string
      required:
      - ClientReference
      - MessagePriority
      - MessageType
      - ScheduledDeliveryDate
      - SenderId
      type: object
      xml:
        name: MessageRequest
    MessageStatus:
      description: Message Status
      enum:
      - "100"
      - "105"
      - "110"
      - "115"
      - "120"
      - "125"
      - "130"
      - "135"
      - "140"
      - "145"
      - "150"
      - "160"
      - "112"
      - "170"
      - "180"
      type: string
    MessageType:
      description: Supported Message Types
      enum:
      - email
      - sms
      type: string
    Page:
      additionalProperties: false
      description: Pagination meta data
      example:
        PreviousUri: PreviousUri
        Size: 6
        NextUri: NextUri
        Index: 0
        Count: 1
      properties:
        Index:
          description: Page index.
          format: int32
          type: integer
        Size:
          description: Page size.
          format: int32
          type: integer
        Count:
          description: Total number of objects in collection.
          format: int64
          type: integer
        PreviousUri:
          description: URI for the previous page. Empty if on the first page.
          nullable: true
          type: string
        NextUri:
          description: URI for the next page. Empty if on the last page.
          nullable: true
          type: string
      type: object
      xml:
        name: Page
    ProblemDetails:
      additionalProperties:
        xml:
          name: Object
      example:
        instance: instance
        detail: detail
        type: type
        title: title
        status: 0
      properties:
        type:
          nullable: true
          type: string
        title:
          nullable: true
          type: string
        status:
          format: int32
          nullable: true
          type: integer
        detail:
          nullable: true
          type: string
        instance:
          nullable: true
          type: string
      type: object
      xml:
        name: ProblemDetails
    Salutation:
      enum:
      - Mr
      - Miss
      - Mrs
      - Ms
      - Dr
      - Prof
      type: string
    SortDirection:
      description: Sort direction
      enum:
      - asc
      - desc
      type: string
    Subscriber:
      additionalProperties: false
      description: Subscriber object.
      example:
        MobileNo: "0035699999999"
        Email: email@domain.com
        Address: Address
        Locality: Locality
        FirstName: FirstName
        Title: null
        PhoneNoAlt: PhoneNoAlt
        PhoneNo: PhoneNo
        SubscriberId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        DisplayName: DisplayName
        Country: Country
        PreferredLanguage: null
        LastName: LastName
        PostCode: PostCode
      properties:
        SubscriberId:
          description: Subscriber unique identifier
          format: uuid
          type: string
        Address:
          description: Full Address Details
          nullable: true
          type: string
        Locality:
          description: Locality
          nullable: true
          type: string
        PostCode:
          description: Post Code
          nullable: true
          type: string
        PhoneNo:
          description: Phone Number
          nullable: true
          type: string
        PhoneNoAlt:
          description: Alternate Phone Number
          nullable: true
          type: string
        Country:
          description: ISO 3166-1 Alpha-2 Country Code
          maxLength: 2
          minLength: 0
          nullable: true
          type: string
        DisplayName:
          description: Display Name
          maxLength: 400
          minLength: 0
          nullable: true
          type: string
        Title:
          $ref: '#/components/schemas/Salutation'
        FirstName:
          description: First Name
          maxLength: 160
          minLength: 0
          nullable: true
          type: string
        LastName:
          description: Last Email
          maxLength: 200
          minLength: 0
          nullable: true
          type: string
        Email:
          description: Email Address
          example: email@domain.com
          nullable: true
          pattern: "[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,64}"
          type: string
        MobileNo:
          description: Mobile Number
          example: "0035699999999"
          nullable: true
          pattern: "^\\d{10,15}$"
          type: string
        PreferredLanguage:
          $ref: '#/components/schemas/Language'
      required:
      - SubscriberId
      type: object
      xml:
        name: Subscriber
    Subscribers:
      additionalProperties: false
      description: Subscribers object.
      example:
        Collection:
        - MobileNo: "0035699999999"
          Email: email@domain.com
          Address: Address
          Locality: Locality
          FirstName: FirstName
          Title: null
          PhoneNoAlt: PhoneNoAlt
          PhoneNo: PhoneNo
          SubscriberId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          DisplayName: DisplayName
          Country: Country
          PreferredLanguage: null
          LastName: LastName
          PostCode: PostCode
        - MobileNo: "0035699999999"
          Email: email@domain.com
          Address: Address
          Locality: Locality
          FirstName: FirstName
          Title: null
          PhoneNoAlt: PhoneNoAlt
          PhoneNo: PhoneNo
          SubscriberId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          DisplayName: DisplayName
          Country: Country
          PreferredLanguage: null
          LastName: LastName
          PostCode: PostCode
        Page:
          PreviousUri: PreviousUri
          Size: 6
          NextUri: NextUri
          Index: 0
          Count: 1
      properties:
        Page:
          $ref: '#/components/schemas/Page'
        Collection:
          description: Represents a Collection of Subscriber objects.
          items:
            $ref: '#/components/schemas/Subscriber'
          nullable: true
          type: array
          xml:
            name: Collection
            wrapped: true
      type: object
      xml:
        name: Subscribers
    UpdateMessageBatchRequest:
      additionalProperties: false
      description: Message Request
      example:
        CallbackUrl: https://domain.com/listener
        MessageContent:
        - Language: null
          Attachments:
          - ContentStream: ContentStream
            ContentType: ContentType
            FileName: FileName
          - ContentStream: ContentStream
            ContentType: ContentType
            FileName: FileName
          Subject: Subject
          MessageBody: MessageBody
        - Language: null
          Attachments:
          - ContentStream: ContentStream
            ContentType: ContentType
            FileName: FileName
          - ContentStream: ContentStream
            ContentType: ContentType
            FileName: FileName
          Subject: Subject
          MessageBody: MessageBody
        MessagePriority: null
        ClientReference: ClientReference
        SenderId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ScheduledDeliveryDate: 2000-01-23T04:56:07.000+00:00
        MessageType: null
      properties:
        MessageContent:
          description: Message Content.
          items:
            $ref: '#/components/schemas/MessageContent'
          minItems: 1
          nullable: true
          type: array
          xml:
            name: MessageContent
            wrapped: true
        ClientReference:
          description: Unique reference generated by the client application.
          maxLength: 64
          minLength: 0
          type: string
        MessageType:
          $ref: '#/components/schemas/MessageType'
        MessagePriority:
          $ref: '#/components/schemas/MessagePriority'
        SenderId:
          description: Sender identifier. This field is used by the Notifications
            Portal to specify the sender name for the message.
          format: uuid
          type: string
        CallbackUrl:
          description: "If provided, the Notifications Portal will deliver a receipt\
            \ back to the application \r\nthrough the HTTP POST method for the provided\
            \ URL. \r\nIf URL is not provided the default API URL will be used."
          example: https://domain.com/listener
          maxLength: 800
          minLength: 0
          nullable: true
          type: string
        ScheduledDeliveryDate:
          description: "The date and time when the message will be scheduled for delivery.\
            \ \r\nFor instant messaging provide the current date and time."
          format: date-time
          type: string
      required:
      - ClientReference
      - MessagePriority
      - MessageType
      - ScheduledDeliveryDate
      - SenderId
      type: object
      xml:
        name: Message
    UpdateMessageRequest:
      additionalProperties: false
      description: Message Request
      example:
        CallbackUrl: https://domain.com/listener
        MessagePriority: null
        ClientReference: ClientReference
        SenderId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Attachments:
        - ContentStream: ContentStream
          ContentType: ContentType
          FileName: FileName
        - ContentStream: ContentStream
          ContentType: ContentType
          FileName: FileName
        ScheduledDeliveryDate: 2000-01-23T04:56:07.000+00:00
        Subject: Subject
        MessageType: null
        Contact:
          MobileNo: "0035699999999"
          Email: email@domain.com
          FirstName: FirstName
          DisplayName: DisplayName
          Title: null
          PreferredLanguage: null
          LastName: LastName
        MessageBody: MessageBody
      properties:
        Contact:
          $ref: '#/components/schemas/Contact'
        Subject:
          description: "Message Subject.\r\nConditional - Used only for e-mail message\
            \ types or message types requiring a Subject."
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        MessageBody:
          description: Message Body.
          minLength: 1
          type: string
        Attachments:
          description: "Message attachment list.\r\nOptional - Used only for e-mail\
            \ message types or message types allowing an attachement."
          items:
            $ref: '#/components/schemas/Attachment'
          nullable: true
          type: array
          xml:
            name: Attachments
            wrapped: true
        ClientReference:
          description: Unique reference generated by the client application.
          maxLength: 64
          minLength: 0
          type: string
        MessageType:
          $ref: '#/components/schemas/MessageType'
        MessagePriority:
          $ref: '#/components/schemas/MessagePriority'
        SenderId:
          description: Sender identifier. This field is used by the Notifications
            Portal to specify the sender name for the message.
          format: uuid
          type: string
        CallbackUrl:
          description: "If provided, the Notifications Portal will deliver a receipt\
            \ back to the application \r\nthrough the HTTP POST method for the provided\
            \ URL. \r\nIf URL is not provided the default API URL will be used."
          example: https://domain.com/listener
          maxLength: 800
          minLength: 0
          nullable: true
          type: string
        ScheduledDeliveryDate:
          description: "The date and time when the message will be scheduled for delivery.\
            \ \r\nFor instant messaging provide the current date and time."
          format: date-time
          type: string
      required:
      - ClientReference
      - Contact
      - MessageBody
      - MessagePriority
      - MessageType
      - ScheduledDeliveryDate
      - SenderId
      type: object
      xml:
        name: Message
    UpdateScheduledMessageBatchRequest:
      additionalProperties: false
      description: Message Schedule
      example:
        ScheduledDeliveryDate: 2000-01-23T04:56:07.000+00:00
      properties:
        ScheduledDeliveryDate:
          description: The date and time when the message will be scheduled for delivery.
          format: date-time
          type: string
      required:
      - ScheduledDeliveryDate
      type: object
      xml:
        name: MessageSchedule
    UpdateScheduledMessageRequest:
      additionalProperties: false
      description: Message Schedule
      example:
        ScheduledDeliveryDate: 2000-01-23T04:56:07.000+00:00
      properties:
        ScheduledDeliveryDate:
          description: The date and time when the message will be scheduled for delivery.
          format: date-time
          type: string
      required:
      - ScheduledDeliveryDate
      type: object
      xml:
        name: MessageSchedule
    UpdateSubscriberGroupRequest:
      additionalProperties: false
      description: Update Subscriber GroupRequest
      example:
        Name: Name
      properties:
        Name:
          description: Group Name
          maxLength: 50
          minLength: 0
          type: string
      required:
      - Name
      type: object
      xml:
        name: Group
    UpdateSubscriberRequest:
      additionalProperties: false
      description: Update Subscriber Request
      example:
        MobileNo: "0035699999999"
        Email: email@domain.com
        Address: Address
        Locality: Locality
        FirstName: FirstName
        Title: null
        PhoneNoAlt: PhoneNoAlt
        PhoneNo: PhoneNo
        DisplayName: DisplayName
        Country: Country
        PreferredLanguage: null
        LastName: LastName
        PostCode: PostCode
      properties:
        Address:
          description: Full Address Details
          nullable: true
          type: string
        Locality:
          description: Locality
          nullable: true
          type: string
        PostCode:
          description: Post Code
          nullable: true
          type: string
        PhoneNo:
          description: Phone Number
          nullable: true
          type: string
        PhoneNoAlt:
          description: Alternate Phone Number
          nullable: true
          type: string
        Country:
          description: ISO 3166-1 Alpha-2 Country Code
          maxLength: 2
          minLength: 0
          nullable: true
          type: string
        DisplayName:
          description: Display Name
          maxLength: 400
          minLength: 0
          nullable: true
          type: string
        Title:
          $ref: '#/components/schemas/Salutation'
        FirstName:
          description: First Name
          maxLength: 160
          minLength: 0
          nullable: true
          type: string
        LastName:
          description: Last Email
          maxLength: 200
          minLength: 0
          nullable: true
          type: string
        Email:
          description: Email Address
          example: email@domain.com
          nullable: true
          pattern: "[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,64}"
          type: string
        MobileNo:
          description: Mobile Number
          example: "0035699999999"
          nullable: true
          pattern: "^\\d{10,15}$"
          type: string
        PreferredLanguage:
          $ref: '#/components/schemas/Language'
      type: object
      xml:
        name: Subscriber
    Validation:
      additionalProperties: false
      description: Validation Error Information
      example:
        ErrorMessage: ErrorMessage
        Key: Key
      properties:
        Key:
          description: Key representing the failed filed.
          nullable: true
          type: string
        ErrorMessage:
          description: Error message for the failed field.
          nullable: true
          type: string
      type: object
      xml:
        name: Validation
  securitySchemes:
    SMG-V1-HMAC-SHA256:
      description: "The Notifications API uses an authentication scheme based on the\
        \ OAuth 2 specification (<a href=\"https://datatracker.ietf.org/doc/html/draft-ietf-oauth-v2-http-mac-01\"\
        \ target=\"_blank\">IETF Oauth v2 HTTP MAC{/a}). All requests to resources\
        \ must be accompanied by a correct \"Authorization\" header as per this specification.\
        \  The client includes the MAC key identifier, nonce, and request MAC with\
        \ the request."
      in: query
      name: SmgV1HmacSha256
      type: apiKey

