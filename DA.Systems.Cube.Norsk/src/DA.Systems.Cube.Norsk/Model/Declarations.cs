/*
 * Norsk API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: helpdesk@norsk-global.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = DA.Systems.Cube.Norsk.Client.FileParameter;
using OpenAPIDateConverter = DA.Systems.Cube.Norsk.Client.OpenAPIDateConverter;

namespace DA.Systems.Cube.Norsk.Model
{
    /// <summary>
    /// Declarations
    /// </summary>
    [DataContract(Name = "Declarations")]
    public class Declarations : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Declarations" /> class.
        /// </summary>
        /// <param name="preferentialOrigin">preferentialOrigin.</param>
        /// <param name="transportationCost">transportationCost.</param>
        /// <param name="freightCost">freightCost.</param>
        /// <param name="insurance">insurance.</param>
        public Declarations(string preferentialOrigin = default(string), Money transportationCost = default(Money), Money freightCost = default(Money), Money insurance = default(Money))
        {
            PreferentialOrigin = preferentialOrigin;
            TransportationCost = transportationCost;
            FreightCost = freightCost;
            Insurance = insurance;
        }

        /// <summary>
        /// Gets or Sets PreferentialOrigin
        /// </summary>
        [DataMember(Name = "PreferentialOrigin", EmitDefaultValue = true)]
        public string PreferentialOrigin { get; set; }

        /// <summary>
        /// Gets or Sets TransportationCost
        /// </summary>
        [DataMember(Name = "TransportationCost", EmitDefaultValue = true)]
        public Money TransportationCost { get; set; }

        /// <summary>
        /// Gets or Sets FreightCost
        /// </summary>
        [DataMember(Name = "FreightCost", EmitDefaultValue = true)]
        public Money FreightCost { get; set; }

        /// <summary>
        /// Gets or Sets Insurance
        /// </summary>
        [DataMember(Name = "Insurance", EmitDefaultValue = true)]
        public Money Insurance { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Declarations {\n");
            sb.Append("  PreferentialOrigin: ").Append(PreferentialOrigin).Append("\n");
            sb.Append("  TransportationCost: ").Append(TransportationCost).Append("\n");
            sb.Append("  FreightCost: ").Append(FreightCost).Append("\n");
            sb.Append("  Insurance: ").Append(Insurance).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
