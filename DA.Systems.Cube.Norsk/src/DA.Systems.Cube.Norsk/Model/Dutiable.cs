/*
 * Norsk API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: helpdesk@norsk-global.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = DA.Systems.Cube.Norsk.Client.FileParameter;
using OpenAPIDateConverter = DA.Systems.Cube.Norsk.Client.OpenAPIDateConverter;

namespace DA.Systems.Cube.Norsk.Model
{
    /// <summary>
    /// Represents a dutiable shipment item. This class details the indicated value and the currency of the dutiable shipment.
    /// </summary>
    [DataContract(Name = "Dutiable")]
    public class Dutiable : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Dutiable" /> class.
        /// </summary>
        /// <param name="value">The indicated value of the dutiable shipment..</param>
        /// <param name="currency">The currency of the dutiable shipment&#39;s value..</param>
        public Dutiable(double value = default(double), string currency = default(string))
        {
            Value = value;
            Currency = currency;
        }

        /// <summary>
        /// The indicated value of the dutiable shipment.
        /// </summary>
        /// <value>The indicated value of the dutiable shipment.</value>
        [DataMember(Name = "Value", EmitDefaultValue = true)]
        public double Value { get; set; }

        /// <summary>
        /// The currency of the dutiable shipment&#39;s value.
        /// </summary>
        /// <value>The currency of the dutiable shipment&#39;s value.</value>
        [DataMember(Name = "Currency", EmitDefaultValue = true)]
        public string Currency { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Dutiable {\n");
            sb.Append("  Value: ").Append(Value).Append("\n");
            sb.Append("  Currency: ").Append(Currency).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
