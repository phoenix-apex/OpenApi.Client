/*
 * Norsk API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: helpdesk@norsk-global.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using DA.Systems.Cube.Norsk.Model;
using DA.Systems.Cube.Norsk.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace DA.Systems.Cube.Norsk.Test.Model
{
    /// <summary>
    ///  Class for testing Quote
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class QuoteTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Quote
        //private Quote instance;

        public QuoteTests()
        {
            // TODO uncomment below to create an instance of Quote
            //instance = new Quote();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Quote
        /// </summary>
        [Fact]
        public void QuoteInstanceTest()
        {
            // TODO uncomment below to test "IsType" Quote
            //Assert.IsType<Quote>(instance);
        }

        /// <summary>
        /// Test the property 'ServiceName'
        /// </summary>
        [Fact]
        public void ServiceNameTest()
        {
            // TODO unit test for the property 'ServiceName'
        }

        /// <summary>
        /// Test the property 'ServiceCode'
        /// </summary>
        [Fact]
        public void ServiceCodeTest()
        {
            // TODO unit test for the property 'ServiceCode'
        }

        /// <summary>
        /// Test the property 'TransitTime'
        /// </summary>
        [Fact]
        public void TransitTimeTest()
        {
            // TODO unit test for the property 'TransitTime'
        }

        /// <summary>
        /// Test the property 'ChargeableWeight'
        /// </summary>
        [Fact]
        public void ChargeableWeightTest()
        {
            // TODO unit test for the property 'ChargeableWeight'
        }

        /// <summary>
        /// Test the property 'BaseCost'
        /// </summary>
        [Fact]
        public void BaseCostTest()
        {
            // TODO unit test for the property 'BaseCost'
        }

        /// <summary>
        /// Test the property 'FuelCost'
        /// </summary>
        [Fact]
        public void FuelCostTest()
        {
            // TODO unit test for the property 'FuelCost'
        }

        /// <summary>
        /// Test the property 'TotalCost'
        /// </summary>
        [Fact]
        public void TotalCostTest()
        {
            // TODO unit test for the property 'TotalCost'
        }

        /// <summary>
        /// Test the property 'Costs'
        /// </summary>
        [Fact]
        public void CostsTest()
        {
            // TODO unit test for the property 'Costs'
        }
    }
}
