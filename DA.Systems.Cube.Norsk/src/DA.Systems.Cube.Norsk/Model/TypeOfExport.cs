/*
 * Norsk API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: helpdesk@norsk-global.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = DA.Systems.Cube.Norsk.Client.FileParameter;
using OpenAPIDateConverter = DA.Systems.Cube.Norsk.Client.OpenAPIDateConverter;

namespace DA.Systems.Cube.Norsk.Model
{
    /// <summary>
    /// Defines TypeOfExport
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum TypeOfExport
    {
        /// <summary>
        /// Enum Permanent for value: Permanent
        /// </summary>
        [EnumMember(Value = "Permanent")]
        Permanent = 1,

        /// <summary>
        /// Enum Temporary for value: Temporary
        /// </summary>
        [EnumMember(Value = "Temporary")]
        Temporary = 2,

        /// <summary>
        /// Enum Gift for value: Gift
        /// </summary>
        [EnumMember(Value = "Gift")]
        Gift = 3,

        /// <summary>
        /// Enum Repair for value: Repair
        /// </summary>
        [EnumMember(Value = "Repair")]
        Repair = 4,

        /// <summary>
        /// Enum Sample for value: Sample
        /// </summary>
        [EnumMember(Value = "Sample")]
        Sample = 5,

        /// <summary>
        /// Enum Return for value: Return
        /// </summary>
        [EnumMember(Value = "Return")]
        Return = 6,

        /// <summary>
        /// Enum InterCompanyData for value: InterCompanyData
        /// </summary>
        [EnumMember(Value = "InterCompanyData")]
        InterCompanyData = 7,

        /// <summary>
        /// Enum Others for value: Others
        /// </summary>
        [EnumMember(Value = "Others")]
        Others = 8
    }

}
